program new;
//{$define SMART} //If not using SMART, then comment this lineout
{$I SRL/OSR.simba}
{$I SRL/utils/rsclient.simba}
{$I SRL/utils/rsclient_overrides.simba}
{$I RSWalker/Walker.simba}
{$I playerInfo.simba}


label reClickObj, reClickTree;

type
  TMSObject = record
    WorldLoc: TPointArray;  //loctions on the world map
    Color: TCTS2Color;      //must have color
    MinCount: Int32;        //size of TPA
    SplitDist: Int32;
    Uptext: String;
  end;

const
  LOGIN_NAME   = PLAYER_NAME;
  LOGIN_PASS   = PLAYER_PASS;
  RS_WORLD     = PLAYER_WORLD;           // preferred world, -1 = random world
  IS_MEMBER    = PLAYER_MEMBER;       // TRUE or FALSE
  PLAY_STYLE   = 0;
  FOOD         = 'Meat';
  TRAIN_SKILL  = SKILL_ATTACK;
  MOUSE_X      = 0;
  MOUSE_Y      = 0;
  DEBUG_SCRIPT = True;

var
  attackBar: TBox;
  Antiban: TAntiban;
  foodDTM: Integer;

procedure declarePlayers();
begin
  with Players.New()^ do
  begin
    LoginName  := LOGIN_NAME;
    Password   := LOGIN_PASS;
    IsActive   := True;
    IsMember   := IS_MEMBER;
    World      := RS_WORLD;
  end;
  Players.SetCurrent(0);
end;

procedure DebugScript(Message: String);
begin
  if (DEBUG_SCRIPT) then
    writeln("DEBUG: " + Message);
end;

function randMove(Point: TPoint; X, Y: Integer): TPoint;
begin
  Result.X := Point.X + RandomRange(-X, X);
  Result.Y := Point.Y + RandomRange(-Y, Y);
end;

procedure SetupAntiban();
begin
  Antiban.Init(TRAIN_SKILL, 4);

  case PLAY_STYLE of
    0:
      begin
        Antiban.AddTask([@Antiban.LoseFocus,     ONE_MINUTE*randomRange(4, 9)]);
        Antiban.AddTask([@Antiban.HoverPlayers,  ONE_MINUTE*randomRange(10, 30)]);
        Antiban.AddTask([@Antiban.CheckSkill,    ONE_MINUTE*randomRange(3, 15)]);
        Antiban.AddTask([@Antiban.CheckStats,    ONE_MINUTE*randomRange(5, 20)]);
        Antiban.AddTask([@Antiban.OpenRandomTab, ONE_MINUTE*randomRange(20, 60)]);
        Antiban.AddTask([@Antiban.VeryShortBreak,ONE_MINUTE*randomRange(8, 20)]);
        Antiban.AddTask([@Antiban.DoMiscStuff,   ONE_MINUTE*randomRange(6, 23)]);
        Antiban.AddTask([@Antiban.RandomCompass, ONE_MINUTE*randomRange(2, 8)]);

        Antiban.AddBreak([randomRange(10, 20)* ONE_MINUTE, randomRange(4, 9) * ONE_MINUTE, 0.05]);
        Antiban.AddBreak([randomRange(30, 45) * ONE_MINUTE, randomRange(6, 15) * ONE_MINUTE, 0.15]);
        Antiban.AddBreak([randomRange(3, 4) * ONE_HOUR,   randomRange(38, 60) * ONE_MINUTE, 0.85]);
        Antiban.AddBreak([randomRange(8, 12) * ONE_HOUR,   randomRange(12, 16) * ONE_HOUR,   0.99]);
      end;
    1:
      begin
        Antiban.AddTask([@Antiban.LoseFocus,     ONE_MINUTE*randomRange(15, 30)]);
        Antiban.AddTask([@Antiban.HoverPlayers,  ONE_MINUTE*randomRange(30, 60)]);
        Antiban.AddTask([@Antiban.CheckSkill,    ONE_MINUTE*randomRange(10, 30)]);
        Antiban.AddTask([@Antiban.CheckStats,    ONE_MINUTE*randomRange(20, 45)]);
        Antiban.AddTask([@Antiban.OpenRandomTab, ONE_MINUTE*randomRange(45, 75)]);
        Antiban.AddTask([@Antiban.VeryShortBreak,ONE_MINUTE*randomRange(15, 30)]);
        Antiban.AddTask([@Antiban.DoMiscStuff,   ONE_MINUTE*randomRange(21, 39)]);
        Antiban.AddTask([@Antiban.RandomCompass, ONE_MINUTE*randomRange(6, 20)]);

        Antiban.AddBreak([randomRange(35, 75)* ONE_MINUTE, randomRange(4, 25) * ONE_MINUTE, 0.5]);
        Antiban.AddBreak([randomRange(75, 150) * ONE_MINUTE, randomRange(10, 35) * ONE_MINUTE, 0.5]);
        Antiban.AddBreak([randomRange(4, 6) * ONE_HOUR,   randomRange(38, 120) * ONE_MINUTE, 0.85]);
        Antiban.AddBreak([randomRange(8, 15) * ONE_HOUR,   randomRange(12, 16) * ONE_HOUR,   0.99]);
      end;
    2:
      begin
        Antiban.AddTask([@Antiban.LoseFocus,     ONE_MINUTE*randomRange(30, 45)]);
        Antiban.AddTask([@Antiban.HoverPlayers,  ONE_MINUTE*randomRange(60, 90)]);
        Antiban.AddTask([@Antiban.CheckSkill,    ONE_MINUTE*randomRange(13, 30)]);
        Antiban.AddTask([@Antiban.CheckStats,    ONE_MINUTE*randomRange(25, 45)]);
        Antiban.AddTask([@Antiban.OpenRandomTab, ONE_MINUTE*randomRange(60, 120)]);
        Antiban.AddTask([@Antiban.VeryShortBreak,ONE_MINUTE*randomRange(18, 45)]);
        Antiban.AddTask([@Antiban.DoMiscStuff,   ONE_MINUTE*randomRange(36, 75)]);
        Antiban.AddTask([@Antiban.RandomCompass, ONE_MINUTE*randomRange(23, 40)]);

        Antiban.AddBreak([randomRange(30, 60)* ONE_MINUTE, randomRange(4, 15) * ONE_MINUTE, 0.05]);
        Antiban.AddBreak([randomRange(60, 100) * ONE_MINUTE, randomRange(9, 25) * ONE_MINUTE, 0.15]);
        Antiban.AddBreak([randomRange(4, 7) * ONE_HOUR,   randomRange(38, 60) * ONE_MINUTE, 0.85]);
        Antiban.AddBreak([randomRange(8, 12) * ONE_HOUR,   randomRange(3, 9) * ONE_HOUR,   0.99]);
      end;
    end;
end;

Procedure myAntiban;
var
  T: TTimeMarker;
begin
  if not SRL.isLoggedIn() then Exit;

  SRL.DismissRandom();
  T.Start;
  Antiban.DoAntiban();
  if (T.GetTime() > 15000) then
    Mainscreen.SetAngle(True);
  T.Pause;
  if (T.GetTime() > 500) then
  begin
    SRL.MouseOffClient(3);
    DebugScript("Time spent in Antiban: " + IntToStr(T.GetTime()));
  end;
end;

function inCombat(): boolean;
var
  TPA: TPointArray;
begin
  if (SRL.FindColors(TPA, CTS2(3376650, 1, 0.18, 1.39), attackBar) > 0) then
    exit(true)
  else exit(false);
end;

procedure checkHP();
var
  foodSlots: TIntArray;
begin
  if (Minimap.GetHPPercent() < randomRange(45, 55)) then
  begin
    foodSlots := Inventory.FindDTM(foodDTM);
    if (length(foodSlots) < 1) then
      terminateScript("Out of food. Exiting Script.");
    Inventory.MouseSlot(foodSlots[0]);
    Mouse.Click(MOUSE_LEFT);
    wait(randomRange(500, 1000));
  end;
end;

function findObjColours(Colour: TCTS2Color; FiltSizeMin, FiltSizeMax: Integer; Uptext : TStringArray) : boolean;
var
  TPA, x : TPointArray;
  ATPA : T2DPointArray;
  Retry : Boolean;
  i : THPBar;
  bars : THPBarArray;
  HP, obj : TBox;
  barFound : boolean;
  Point: TPoint;
begin
  if (SRL.FindColors(TPA, Colour, MainScreen.GetBounds) > 0) then
  begin
    ATPA := TPA.Cluster(2);
    ATPA.FilterSize(FiltSizeMin, FiltSizeMax);
    ATPA.SortByIndex(MainScreen.GetMiddle);
    bars := MainScreen.FindHPBars(MainScreen.GetBounds())

    if (length(ATPA) >= 0) then
    begin
      for x in ATPA do
      begin
        reClickTree:
        if inCombat() then exit();

        //writeln(x.Len());

        for i in bars do
        begin
          HP := i.Bounds;
          obj := GetTPABounds(x);
          obj := [obj.X1, obj.Y1 - 20, obj.X2, obj.Y2 + 20];
          if (obj.Overlap(HP)) then
          begin
            DebugScript("Found HP bar over the monster we wanted to click.");
            barFound := True;
            continue();
          end;
        end;

        if barFound then
        begin
          barFound := false;
          continue();
        end;

        Mouse.Move(randMove(MiddleTPA(x), 20, 20));
        if MainScreen.IsUpText(Uptext) then
        begin
          if Mouse.Click(ctRed) then
          begin
            //SRL.MouseOffClient(3);
            Point := [randomRange(0, 760), randomRange(0, 500)];
            Mouse.Move(Point);
            wait(randomRange(500, 5000));
            Break;
          end else if (not Retry) then
          begin
            Retry := true;
            goto reClickTree;
          end else Retry := false;
        end else
          exit(false);
      end;
    end;
  end;
end;

procedure pickUp();
begin
  findObjColours(CTS2(880134, 10, 0.12, 1.22), 0, 100, ["Grimy", "Arrow", "Beer", "Bones", "Rune", "Coin"]);
end;

procedure loadVars();
begin
  attackBar := [10, 47, 23, 59];
  case lowercase(FOOD) of
    'herring': foodDTM := DTMFromString('mAAEAAHicvc1PCkBQAMThedaOp97CDaQ4hmzcxIKol55/RWycyU9ZW5r6aprNhJJ8IJ1o0eHCDIcJ69sP9M9mpAYLdnhsGOCwvvvTRxR5yov5VFelstgqsZH+zA0y7Bd0');
    'trout': foodDTM := DTMFromString('mFQEAAHic42VgYHjIxMDwFog/APFjIL4LxFeB+BoQ3wPiR1Dxm0D8BIhfA3EUEPsAcTAQJwJxMhCnAHEsEIcDcQAQhwBxElQtiF+bngy0jZEgXtHdytCan82QExHGMCAAAMMGFbw=');
    'meat': foodDTM := DTMFromString('mrAAAAHic42BgYHBmYmDwAOIAIPZkgvDNgdgMiG2B+AlQzTUgvgfE74D4MxB/YICIPwTiRCNWIMmIB+MH+HQi6wYA+34J/w==');
  end;
end;

procedure setupScript();
begin
  RS_CLIENT_TITLES.Append('RuneLite');
  clearDebug();
  srl.SetupForClient([]);
  RSClient.SetFocus();

  loadVars();

  SetupAntiban();
  declarePlayers();
  if (not SRL.isLoggedIn) then
  begin
     Players.LoginCurrent();
     Mainscreen.SetAngle(True);
  end;

end;

procedure mainLoop();
begin
  if (inCombat) then
  begin
    checkHP();
    myAntiban();
    wait(200);
  end else
  begin
    checkHP();
    pickUp();
    FindObjColours(CTS2(14806805, 2, 0.94, 10.88), 10, 5000, ['Attack', 'Chicken']);
  end;
end;

begin
  setupScript();

  repeat
    mainLoop();
  until(false);
end.
